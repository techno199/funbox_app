q1 
1. Для пользователя важна простота и очевидность сервиса: возможность быстро найти нужный элемент, 
смысловая структура этих элементов, отсутствие лишних сложностей, цветовой стиль, подходящий тематике, шрифты, анимации, оптимизация скорости
2. Для менеждера важен фидбек и со стороны разработчика, и со стороны заказчика.
3, 4 - no idea, honestly
5. Для сервеного программиста и фронтенда важно понимание api
q2
Разбиение функионала по модулям, тесты. Мне так повезло, что сайт, над которым я работал на первой работе, достался в минимизированном виде. Работа над его родным функионалом 
была практически невозможна и новые страницы приходилось дописывать одельными spa на angular. 
q3 
presentational - это data agnostic view. Container - data layer/wrapper for presentational component. Вместе они одна полноценная компонента с данными
q4 
У всего есть прототип с полями, и он наследуемый, начиная от window или undefined вплоть до конкретного объекта. Поля внутри объекта ищутся в цепочке прототипов.
Вне фреймфорков ничего необычного не делал
q5 
mocha, chai, jest, you_name_it.. У меня есть бот для discord, там ради интереса написал пару тестов.
В реальном проекте были только ручные тесты.
q6 
̶И̶м̶п̶р̶о̶в̶и̶з̶а̶ц̶и̶я Если в проекте есть подобные формы, сделаю аналог. В противном случае уточню у ответственного коллеги.
q7 
Отладчик Chrome, редактор vscode с кучей расширений.
q8, q9
Выделить ничего не могу - куда google приведет, там и смотрю. Хабр. Когда-то была годовая подписка на pluralsight.
Последнее, что я делал - это тестовое задание на windows forms и asp.net core + entity framework
https://github.com/techno199/MeteostationService
https://github.com/techno199/MeteostationClient
https://github.com/techno199/MeteostationStatisticsObserver
Бот для Discord'а
https://github.com/techno199/5cents-bot
Адаптивная страничка на react
https://github.com/techno199/lptrend-react
посмотреть ее можно тут
https://techno199.github.io
